# %% [markdown]
#
# 1. Что делает команда python -m venv venv?
#     создает виртуальное окружение в папке venv
# 1.1 Что делает каждая команда в списке ниже?
#     pip list - показывает установленные пакеты и их версии в текущем окружении
#     pip freeze > requirements.txt - импорт пакетов с их версиями текущего окружения в файл requirements.txt
#     pip install -r requirements.txt - установка пакетов из requirements.txt в текущее окружение
# 2. Что делает каждая команда в списке ниже?
#     conda env list - показывает список окружений conda, * - активное окружение
#     conda create -n env_name python=3.5 - создать виртуальное окружение env_name и python версии 3.5
#     conda env update -n env_name -f file.yml - обновить окружение по файлу file.yml
#     source activane env_name - аутивировать окружение env_name
#     source deactivate - деактивация окружения, вернет в базовое окружение (base)
#     conda clean -a - очистка от временных файлов пакетов и кеша
# 3. вставьте скрин вашего терминала, где вы активировали сначала venv, потом conda, назовите окружение "SENATOROV"
#
#     ![](3_activation_Senatorov.png)
#
# 4. Как установить необходимые пакеты внутрь виртуального окружения для conda/venv?
#     1. conda install имя_пакета - установка через терминал
#     2. conda env update -f environment.yml - можно обновить по файлу пакетов библиотек
#     3. через навигатор анаконды выбрать пакеты для окружения
# 5. Что делают эти команды?
#     pip freeze > requirements.txt - импорт пакетов окружения с их версиями в requirements.txt
#     conda env export > environment.yml - экспорт окружения в environment.yml
#     первая комнада фиксирует пакеты, вторая полностью воссоздает окружение
# 5.1 вставьте скрин, где будет видна папка VENV в вашем репозитории а также файлы зависимостей requirements.txt и environment.yml, файлы должны содержать зависимости
#     ![](5.1_venv.png)
# 6. Что делают эти команды?
#     pip install -r requirements.txt - устанавливает все зависимости из файла requirements.txt
#     conda env create -f environment.yml. - создаёт окружение из yaml-файла
#
# 7. Что делают эти команды?
#     pip list - выводит список установленных пакетов
#     pip show - выводит информацию о пакете
#     conda list - ыводит список пакетов в окружении conda
#
# 8. Где по умолчанию больше пакетов venv/pip или conda? и почему дата сайнинисты используют conda?
#     в conda больше пакетов и ее используют из-за большого количества предустановленных необходимых пакетов и удобства управления средами
# 9. вставьте скрин где будет видно, Выбор интерпретатора Python (conda) в VS Code/cursor
#     ![](9_kernal.png)
# 10. добавьте в .gitignore папку SENATOROV
#     выполнено
# 11. Зачем нужно виртуально окружение?
#     чтобы исключить конфликты версий пакетов для проектов, а также для работы в независимости от ситсемного питона, если ситсема пк сама на питоне
# 12. С этого момента надо работать в виртуальном окружении conda, ты научился(-ась) выгружать зависимости и работать с окружением?
#     да
# 13. Удалите папку VENV, она больше не нужна, мы же не разрабы, нам нужна только conda
#     выпонено
#
#
