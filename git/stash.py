# %% [markdown]
# #stash
#
# 1. Что делает команда git stash?
# Сохраняет незакоммиченные изменения во временное хранилище (stash) и откатывает рабочую директорию к чистому состоянию.
# 2. Как просмотреть список всех сохранённых изменений (стэшей)?
# git stash list
# 3. Какая команда применяется для использования верхнего стэша?
# git stash apply
# 4. Как применить конкретный стэш по его номеру?
# git stash apply stash_no
# 5. Чем отличается команда git stash apply от git stash pop?
# 	•	apply — применяет изменения, оставляя запись в стэше.
# 	•	pop — применяет и удаляет запись из стэша (если применилось успешно).
# 6. Что делает команда git stash drop?
# git stash drop stash_no
# 7. Как полностью очистить все сохранённые стэши?
# git stash clear
# 8. В каких случаях удобно использовать git stash?
# нужно быстро сделать pull/merge/switch branch, а правки ещё не готовы к коммиту
# 9. Что произойдёт, если выполнить git stash pop, но в проекте есть конфликтующие изменения?
# Git попытается применить изменения и отметит конфликтные файлы. Запись в стэше, как правило, не удаляется, пока конфликт не решён. Дальше: решаешь конфликты → git add … → коммит.
# 10. Можно ли восстановить удалённый стэш после выполнения git stash drop?
# Надёжно — нет. Иногда можно восстановить, если объект ещё в reflog
# 11. Что делает команда git stash save "NAME_STASH"
# Сохраняет изменения с именем NUMBER_STASH
# 12. Что делает команда git stash apply "NUMBER_STASH"
# Применяет указанный стэш NUMBER_STASH
# 13. Что делает команда git stash pop "NUMBER_STASH"
# Применяет и удаляет указанный стэш
# 14. Сохраните текущие изменения в стэш под названием "SENATOROV ver1", вставьте скриншот из терминала
# ![](stash_14.png)
# 15. Внесите любые изменения в ваш репозиторий и сохраните второй стэш под именем "SENATOROV ver2"
# ![](stash_15.png)
# 16. Восстановите ваш стэш "SENATOROV ver1", вставьте скриншот из терминала
# ![](stash_16.png)
# 17. Удалите все стеши из истории, вставьте скриншот из терминала
# ![](stash_17.png)
